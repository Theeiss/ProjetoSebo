<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABERJREFUWEfdVl1oVEcU3lj7I4LSH6uN92djUl9EbbGC4oNIKdRiSylaqEJbqEbN
        3rmboEjBHwJFVPChQsWWYFuxfai0L8X+SNuEBkzTuHcmaVFQ0ahpobVGg69G4/fNng272d3sTTQP9YPh
        njPnzHxzZ86ZOYn/LTylO0RM1KT/nOmHZquv9A/o70P7D+2i1UOtajf1PC2u9w4QrffC6E3KTlPHFFfp
        D0DWj9biqejVZKNJzk79/qTXdGqOG5jX0fcF7X6gdy6qzzxsJxkvkipagr+66gc9NdSxmFe80Bz1GzPP
        WIcyoH92d6JWb/Mfj0v3GNHcNhl/cs5X0Rszt/ZM9VN6qVhKwgvMsuzfR60Ys5vEOI5DmONnziVu8YGB
        b6O1JxJDVfjuRWsRUxH8wKyFvQ/b/h5IX3SV+Qj6eafp9BNY0AnIu8Q1PjCoCxOulO28mmzomiWmQqw5
        9hB8/3WCzHzpsfDD6CB3gjEC+7VZSs8QU2UwijFoYF7z6UcYTAjCD8VUhNmp7rnwPSfqMLgT6P/Fyir6
        DHJoDXEg0XycMgaecpRebg0lUKc6p8HnRvLdtsekyyKbPeYoZZnvhDXEAVJtMwOIMia/Xr0l85Q1lAEm
        Z+odyS3CSUcLoPcxMK0dKQq9l3IsuGG0necn53s70Tw0SUwlMac+M90N9ZfwHUBD5jB1zVoxWzsWeVPU
        ysAkIdoBkfsr7UAOJGJMjEw7BjLmuSRqZSByn8OA1dUNXS6+A05onhXTuOClolXYgVZR46EmpX2c4QUM
        bJSucQPzfIJj2SJqZUjuXkSLnzpl4Aa6GvP08ytdo0PIe/mqUfdV9/Ouin5yRB8bcIuG+muk4z7pGB0S
        LL24xVLUq9PmJeiDbmg6+a1FTFjHOEDmgHwPxnXUqfOPSm95SK5ewqXRQD1HjgvlU779iIVBTDTNOlcA
        s8YL9HcY356rDbgQaywFV2Vqcflc5gVEvZhc3/FVJi+Ihqrg+5YTRi+TgO8+z5g3JnxRJ6Be4LYjHXmk
        NUovlIHFcBqiOgy4gj/cSD0m+X784Rl822D/h/5of0P/Df3vs2KSV5Qv6rX8S6kAzG84XMFjU0+9gByk
        kEuTK50pKDTybkruBtJuDXzakXpn3bRZLKZCyCuGes5soF5Mbm4n091N1tlimDzKkUNejfYxX0tbAwT6
        V+jX8cedvjLryhYidtsD/RcLCOpjIWeRIZ3ZGxPpybcDMbAJ7bVY17YdgBVTzicn6TA5S7Ig2gbbXpAc
        Q4zofPJ7Av+GAVaSPGUaLbkyX8GvjUHFhdw3cgITH7b1W6A/x9+1lCLHwn4cWWTcN2AB37DapUzSYXIA
        8gaQn5wwcoJPox92rxhJTvDMkT47RJ0YMKBwBN+D7A63G9H7gn2t7PajvArNO+I6MWC64BiOYAHfgvA4
        FwSZN9ottMHRitCJBXYgW/8PVUnPg4ZE4i6N6ZPIRkk/qgAAAABJRU5ErkJggg==
</value>
  </data>
</root>